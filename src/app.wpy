<style lang="scss">
@import 'common/weui/weui.wxss';
@import './common/font/iconfont';

.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

// api
import { userLogin } from '@/api/login'
import { USER_STORAGE_TOKEN_PERFIX } from '@/utils/storage'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/list',
      'pages/bookInfo',
      'pages/turnback',
      'pages/success',
      'pages/rateBook'
    ],
    tabBar: {
      color: '#90a4ae',
      selectedColor: '#02a9f4',
      list: [
        {pagePath: 'pages/index', text: '借阅', iconPath: '/static/book-gray.png', selectedIconPath: '/static/book-active.png'},
        {pagePath: 'pages/list', text: '我的', iconPath: '/static/list-gray.png', selectedIconPath: '/static/list-active.png'}
      ]
    },
    window: {
      // navigationStyle: 'custom',
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '书架',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {}

  constructor () {
    super()
    this.use('requestfix')
  }

  userLogin() {
    wepy.login({
      success (res) {
        userLogin({code: res.code}).then(res => {
          if (res && res.token) {
            wepy.setStorage({
              key: USER_STORAGE_TOKEN_PERFIX,
              data: res.token
            })
          } else {
            wepy.showModal({
              title: '提醒',
              content: '登录获取用户Token失败,请联系钱大仙确认服务器无问题.',
              showCancel: false
            })
          }
        })
      },
      fail () {
        wepy.showModal({
          title: '提醒',
          content: '微信登录服务调用失败,请确认网络连接后稍后再尝试.',
          showCancel: false
        })
      }
    })
  }

  /**
   * 首次登录需要先检查是否有session
   */
  onLaunch() {
    wepy.checkSession({
        // 未过期
      success (res) {
        // 从本地获取用户TOKEN,如果失败则重新登录
        wepy.getStorage({
          key: USER_STORAGE_TOKEN_PERFIX,
          fail () {
            wepy.showModal({
              title: '提醒',
              content: '未获取到用户Token,需要重新登录获取.',
              confirmText: '重新获取',
              showCancel: false,
              success (res) {
                if (res.confirm) {
                  this.userLogin()
                }
              }
            })
          }
        })
      },
      // 过期则需要重新登录
      fail () {
        this.userLogin()
      }
    })
  }
}
</script>

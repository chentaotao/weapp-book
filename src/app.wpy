<style lang="scss">
@import 'common/weui/weui.wxss';
@import './common/font/iconfont';

.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

// api
import { getUserInfoState } from '@/api/my'
import { canUseUserInfo, authUserInfo } from '@/utils/authUserInfo'
import { USER_STORAGE_TOKEN_PERFIX, IS_ADMIN, IS_DEVICE_IPHONEX } from '@/utils/storage'
import { SET_AUTHORIZED, SET_CANUSE_USERINFO, SET_ADMIN, IS_IPHONEX } from '@/store/types'
import userLoginFunc from '@/utils/userLogin'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/newbie',
      'pages/list',
      'pages/bookInfo',
      'pages/turnback',
      'pages/success',
      'pages/rateBook',
      'pages/admin/entryBook',
      'pages/admin/entryInfo',
      'pages/userInfo',
      'pages/other/devInfo'
    ],
    tabBar: {
      color: '#90a4ae',
      selectedColor: '#02a9f4',
      list: [
        {pagePath: 'pages/index', text: '阅乎', iconPath: '/static/book-gray.png', selectedIconPath: '/static/book-active.png'},
        {pagePath: 'pages/list', text: '我的', iconPath: '/static/list-gray.png', selectedIconPath: '/static/list-active.png'}
      ]
    },
    window: {
      // navigationStyle: 'custom',
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '阅乎',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {}

  constructor () {
    super()
    this.use('requestfix')
  }

  // 用户是否授权了用户资料接口,
  // 如果授权了则自动获取用户信息
  getUserInfo() {
    canUseUserInfo()
    .then(() => {
      store.dispatch({
        type: SET_CANUSE_USERINFO,
        payload: true
      })
    })
    .then(() => {
      // 获取用户信息存入store
      authUserInfo(store)
    })
    .catch(() => {})
  }

  // 登录时属于静默登录状态,
  // 除非有错误,否则用户不会感知
  userLogin() {
    userLoginFunc()
  }

  /**
   * 系统目前只需要拾取用户最基础信息,因此不需要持续保持登录状态.
   * 这里只需要检查是否有TOKEN.
   */
  async onLaunch() {
    // 从本地获取用户TOKEN,如果失败则重新登录
    const token = wepy.getStorageSync(USER_STORAGE_TOKEN_PERFIX)
    if (token) {
      wepy.showLoading({
        title: '正在登录,请稍候...'
      })
      // 配置全局认证环境
      store.dispatch({ type: SET_AUTHORIZED, payload: true })
      // 配置改用户是否授权了用户资料接口
      this.getUserInfo()
      // 监测用户是否填入了真实信息,因为后期真实信息在做统计,借阅制度管理时非常重要,
      // 所以这里必须走该流程
      const {exitsUserInfo} = await getUserInfoState()
      // 隐藏登录状态
      wepy.hideLoading()
      // 监测通过跳转至首页
      if (!exitsUserInfo) {
        wepy.redirectTo({
          url: './newbie'
        })
      }
      // set user is Admin or not
      wepy.getStorage({
        key: IS_ADMIN,
        success (res) {
          store.dispatch({type: SET_ADMIN, payload: res.data})
        }
      })
    } else {
      this.userLogin()
    }

    //
    wepy.getStorage({
      key: IS_DEVICE_IPHONEX,
      success (res) {
        store.dispatch({ type: IS_IPHONEX, payload: res.data })
      },
      fail () {
        // iPhone X (GSM+CDMA)<iPhone10,3>
        wepy.getSystemInfo({
          success (res) {
            const isIphoneX = res.model.indexOf('iPhone X') !== -1
            wepy.setStorage({
              key: IS_DEVICE_IPHONEX,
              data: isIphoneX
            })
            store.dispatch({ type: IS_IPHONEX, payload: isIphoneX })
          }
        })
      }
    })
  }
}
</script>

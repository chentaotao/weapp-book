<template>
    <scroll-view scroll-y="{{true}}" class="container">
        <view class="header" style="background:url({{bookInfo.imagesLarge}}) 100% 100% no-repeat;filter:blur(15rpx)" />
        <view class="header-bookImg">
            <image class="image" mode="" src="{{bookInfo.tagImage}}" />
        </view>
        <view class="bookInfo">
            <view class="block bookDesc" id="bookInfo" >
                <text class="line title">书名: {{bookInfo.title}}</text>
                <text class="line subTitle" wx:if="{{bookInfo.subtitle !== ''}}">副书名:</text>
                <text class="line author">作者: {{bookInfo.author}}</text>
                <text class="line translator" wx:if="{{bookInfo.translator !== ''}}">翻译: {{bookInfo.translator}}</text>
                <text class="line desc" style="height:{{bookDescHeight}}">{{bookInfo.summary}}</text>
                <view class="handle-more" wx:if="{{isShowBookDeskHandler}}" @tap="displayFullBookInfo">点击加载更多</view>
            </view>
            <view class="block rate">
                <rateCom :rate.sync="bookRate"></rateCom>
            </view>
            <view class="block submit" wx:if="{{isReadOnly === 'false'}}">
                <button class="weui-btn" type="primary" @tap="confirmToBorrow">借阅</button>
            </view>
             <view class="block submit" wx:if="{{ isReadOnly === 'true' && isBorrowedByUser }}">
                <button class="weui-btn" type="primary" @tap="confirmToReturn">归还</button>
            </view>
            <view class="blank" />
        </view>
    </scroll-view>
</template>
<script>
import wepy from 'wepy'
// components
import RateComponent from '@/components/rate'
// api
import { getBookState, borrowBook, returnBook, bookDetail } from '@/api/book'

export default class BookInfo extends wepy.page {
  components = {
    rateCom: RateComponent
  }

  data = {
    bookId: null,
    isReadOnly: false,
    isShowBookDeskHandler: false,
    isBorrowedByUser: false,
    bookDescHeight: 'auto',
    backColor: '',
    bookRate: '',
    bookInfo: {
      title: '',
      subtitle: '',
      tags: [],
      images: {
        small: '',
        large: ''
      },
      author_intro: '',
      summary: ''

    }
  }

  initBookPage (bookInfo) {
    this.bookInfo = Object.assign({}, this.bookInfo, bookInfo)
    this.bookRate = bookInfo.grade
  }

 // 这里应该首先请求后端服务获取图书信息,
 // 如果有则弹出详情
  async onLoad (queryData) {
    const { bookId, readOnly } = queryData
    if (bookId) {
      //
      this.isReadOnly = readOnly
      //
      this.bookId = bookId
      //
      wepy.showLoading({
        title: '正在读取图书信息'
      })

      const bookData = await bookDetail({bookIsbn: bookId})
      const isBorrowedByUser = await getBookState({bookIsbn: bookId})
      if (bookData) {
        // 初始化书籍显示数据
        this.initBookPage(bookData)
        // 如果该书被当前用户借走, 页面将展示还书按钮
        this.isBorrowedByUser = isBorrowedByUser && isBorrowedByUser.borrowType === '1'
        //
        this.$apply()
          //
        this.getBookCurrentPos()
          //
        wepy.hideLoading()
      } else {
        wepy.hideLoading()
        wepy.showModal({
          title: '有点问题',
          content: '获取服务器书籍信息失败, 请在群中联系[钱大仙]同学处理.',
          showCancel: false,
          success (res) {
            wepy.redirectTo({
              url: './index'
            })
          }
        })
      }
    }
  }

  getBookCurrentPos () {
    const query = wepy.createSelectorQuery()
    query.select('#bookInfo').boundingClientRect()

    query.exec(res => {
      if (res[0].height > 350) {
        this.isShowBookDeskHandler = true
        this.bookDescHeight = '350rpx'
        this.$apply()
      }
    })
  }

  //
  methods = {
    // 借阅
    confirmToBorrow () {
      const self = this
      wepy.showModal({
        title: '提醒',
        content: `确定要借阅<<${this.bookInfo.title}>>吗?`,
        confirmText: '就这本了',
        cancelText: '再想想',
        success (res) {
          if (res.confirm) {
            // 借阅
            wepy.showLoading({
              title: '管理员拿书去啦,稍等...'
            })

            borrowBook({bookIsbn: self.bookId}).then(res => {
              setTimeout(() => {
                wepy.hideLoading()
                wepy.redirectTo({
                  url: './success'
                })
              }, 500)
            })
          }
        }
      })
    },
    // 还书
    confirmToReturn () {
      const self = this
      wepy.showModal({
        title: '提醒',
        content: `确定要归还<<${this.bookInfo.title}>>吗?`,
        success (res) {
          if (res.confirm) {
            // 借阅
            wepy.showLoading({
              title: '还书中...'
            })

            returnBook({bookIsbn: self.bookId}).then(res => {
              setTimeout(() => {
                wepy.hideLoading()
                wepy.redirectTo({
                  url: `./turnback?bookId=${self.bookId}`
                })
              }, 500)
            })
          }
        }
      })
    },
    // 显示全部摘要
    displayFullBookInfo () {
      this.isShowBookDeskHandler = false
      this.bookDescHeight = 'auto'
    }
  }
}
</script>
<style lang="less">
.container {
    width:100%;
    height:100vh;
    display: flex;
    position: relative;
    flex-direction: column;

    .header {
        width:100%;
        height: 400rpx;
        background-color: #cfd8dc;
        transform: scale(1.2);
    }

    .header-bookImg {
        position: absolute;
        top:30px; left: 50%;
        margin-left: -130rpx;
        width:262rpx;
        height:390rpx;
        overflow:hidden;
        box-shadow:0 5rpx 15rpx rgba(0,0,0,.25);

        .image {
            width: 255rpx;
            height:380rpx;
            border: 2px solid #eceff1;
        }
    }

    .bookInfo {
        width:100%;
        flex:1;
        padding-top:90rpx;
        display: flex;
        align-items: center;
        flex-direction: column;
        font-size:30rpx;

        .block {
            width:90%;
            padding:15rpx;
            border: 1rpx solid #cfd8dc;
            border-radius: 8rpx;
            display: flex;
            flex-direction: column;
            box-sizing: border-box;

            &.bookDesc {

                .desc {
                    font-size:28rpx;
                    overflow: hidden;
                }

                .handle-more {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    padding-top:10rpx;
                    border-top: 1rpx solid #cfd8dc;
                }

            }

            &.rate {
              display: flex;
              justify-content: center;
              align-items: center;
              margin-top:15rpx;

              .rateText {
                width:100rpx;
              }

            }

            .line {
                flex:1;
                width: 100%;
                padding: 20rpx 0;
                border-bottom: 1px dotted #cfd8dc;

                &:last-child {
                    border-bottom: none;
                }
            }
        }

        .submit {
          border:none;
          padding:0;
          margin:15rpx 0;
          display: block;
        }
    }

    .blank {
      width:100%;
      height:25rpx;
    }
    
    
}
</style>

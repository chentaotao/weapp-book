<template>
    <view class="page">
      <view wx:if="{{isAuthorized}}">
        <view class="header">
            <image class="avatar" src="{{userInfo.avatarUrl}}" /> 
            <view class="nickName">{{userInfo.nickName}}</view>
        </view>
        <view class="bookList">
            <view class="list" wx:if="{{bookList.length}}">
              <repeat for="{{bookList}}" key="index" item="book">
                <view class="list-cell" hover-class="list-cell-hover" @tap="showBookDetail({{book}})">
                  <view class="list-cell-image">
                    <image class="book-image" src="{{book.tagImage}}"></image>
                  </view>
                  <view class="list-cell-content">
                      <view class="list-cell-line title">书名: {{book.title}}</view>
                      <view class="list-cell-line authro">作者: {{book.author}}</view>
                      <view class="list-cell-line summary">简介: {{book.summary}}</view>
                      <view class="list-cell-line date">借阅时间: {{book.borrowTime}}</view>
                  </view>
                </view>
              </repeat>  
            </view>
            <view class="empty" wx:else>
                <text>时间是不等人滴~阅读就从现在开始</text>
            </view>
        </view>
      </view>  
      <view class="noLoginPage" wx:else>
         <button wx:if="{{!isAuthorized}}" class="loginBtn" open-type="getUserInfo" @tap="getUserInfo">快速登录</button>
      </view>
    </view>
</template>
<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import { authUserInfo } from '@/utils/authUserInfo'

// api
import { myBorrowList } from '@/api/my'
import { getUserToken } from '@/utils/storage'

@connect({
  userInfo: state => state.user.userInfo,
  isAuthorized: state => state.user.isAuthorized
})
export default class MyBookList extends wepy.page {
  config = {
    navigationBarBackgroundColor: '#b0bec5',
    backgroundColor: '#b0bec5',
    navigationBarTextStyle: 'white',
    navigationBarTitleText: '我的书架',
    enablePullDownRefresh: true
  }

  data = {
    bookList: []
  }

  onLoad (queryData) {
    this.getBookList()
  }

  onShow() {
    this.onPullDownRefresh()
  }

 // 下拉刷新列表
  async onPullDownRefresh () {
    wepy.showNavigationBarLoading()
    const res = await this.getBookList()
    if (res) {
      wepy.stopPullDownRefresh()
      wepy.hideNavigationBarLoading()
    } else {
      wepy.showToast({
        title: '刷新失败,请稍候重试'
      })
    }
  }

  getBookList () {
    return new Promise((resolve, reject) => {
      const userToken = getUserToken()
      if (userToken) {
        myBorrowList({userId: userToken}).then(res => {
          this.bookList = res
          resolve(res)
          this.$apply()
        }).catch(error => {
          reject(error)
        })
      }
    })
  }

  methods = {
    getUserInfo () {
      authUserInfo()
    },
    showBookDetail (book) {
      wepy.navigateTo({
        url: `./bookInfo?bookId=${book.isbn13}&readOnly=true`
      })
    }
  }
}
</script>
<style lang="less">
.page{
  width:100%;
  height:100vh;
  display: flex;
  flex-direction: column;

  .noLoginPage {
    width:100%;
    height:100vh;
    background: #eceff1;
    display: flex;
    align-items: center;
    justify-content: center;

    .loginBtn {

    }
  }

  .header {
    width:100%;
    height:220rpx;
    position:relative;
    background: #b0bec5;

    .avatar{
      position:absolute;
      left:50rpx;
      top:50rpx;
      width:120rpx;
      height:120rpx;
      border-radius:100rpx;
      background:#b0bec5;
    }

    .nickName {
      position:absolute;
      top:90rpx;
      left:200rpx;
      font-size:28rpx;
    }

    .loginBtn {
      width:120rpx;
      position:absolute;
      top:75rpx;
      left:200rpx;
      padding:0;
      margin:0;
      font-size:28rpx;
      color:#fff;
      background:none;

      &:after {
        border:none;
      }
    }

  }

  .bookList {
    background:#fff;

    .list {
      font-size:26rpx;

      .list-cell {
        display: flex;
        padding: 15rpx;
        height: 220rpx;
        box-sizing: border-box;
        border-bottom: 1px solid lighten(#cfd8dc, 10%);

        &:last-child {
          border-bottom: none;
        }


        .list-cell-image {
          width: 130rpx;
          height: 180rpx;
          margin-right:15rpx;

          .book-image {
            width: 130rpx;
            height: 190rpx;
            box-shadow: 0 5px 8px rgba(0,0,0,.15);
          }

        }

        .list-cell-content {
          flex:1 auto;
          display: flex;
          flex-direction: column;
          margin-left:15rpx;
          color: lighten(#455a64, 5%);

          .list-cell-line {
            width:100%;
            padding: 4rpx 0;

            &.title {

            }

            &.summary {
              width: 70vw;
              overflow: hidden;
              text-overflow: ellipsis;
              word-break: break-all;
              white-space:nowrap;
            }

            &.date {

            }

          }

        }

      }

      .list-cell-hover {
        background-color: #eceff1;
      }

    }

    // .title, .date {
    //   font-size:30rpx;
    // }
     
     .empty{
       display: flex;
       justify-content: center;
       align-items: center;
       font-size:28rpx;
       padding:35px 0;
     }
  }
}
</style>
